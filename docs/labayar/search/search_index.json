{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Labayar","text":""},{"location":"#minimum-spesifikasi","title":"Minimum spesifikasi","text":"<ul> <li>PHP 8.0 atau diatasnya</li> <li>Laravel framework 8 atau diatasnya</li> <li>Mysql</li> </ul>"},{"location":"#instalasi","title":"Instalasi","text":"<p>Buka terminal / command prompt project laravel dan ketik:</p> <pre><code>composer require koderpedia/labayar\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Laravel quick start</p>"},{"location":"#setup","title":"Setup","text":"<p>Publish vendor asset</p> <pre><code>php artisan vendor:publish --provider=Koderpedia\\Labayar\\LabayarServiceProvider\n</code></pre> <p>pastikan folder ini, ada di project kamu</p> <pre><code>   my-project/\n   \u251c\u2500\u2500 config/\n   \u2502   \u251c\u2500\u2500 tripay.php\n   \u2502   \u2514\u2500\u2500 labayar.php\n   \u251c\u2500\u2500 database/\n   \u2502   \u2514\u2500\u2500 migrations/\n   \u2502     \u251c\u2500\u2500 2025_04_07_00001_labayar_migration.php\n   \u2502     \u2514\u2500\u2500 2025_04_28_00001_labayar_product_item.php\n   \u2502   \u2514\u2500\u2500 seeders/\n   \u2502     \u2514\u2500\u2500 LabayarSeeder.php\n   \u251c\u2500\u2500 public/\n   \u2502   \u2514\u2500\u2500 labayar-assets/\n   \u2502     \u251c\u2500\u2500 css/\n   \u2514\u2500\u2500   \u2514\u2500\u2500 images/\n</code></pre> <p>Pastikan Event scheduler aktif di MySql kamu. Jika tidak ingin menggunakan event scheduler, kamu bisa buka file database/migrations/2025_04_07_00001_labayar_migration.php lalu hapus bagian ini</p> database/migrations/2025_04_07_00001_labayar_migration.php<pre><code>$expired = Constants::$paymentExpired;\nDB::unprepared(\"\n  CREATE EVENT IF NOT EXISTS set_expired_payment\n  ON SCHEDULE EVERY 5 MINUTE\n  DO\n    UPDATE labayar_invoice_payments\n    SET payment_status = {$expired}\n    WHERE expired_at &lt; NOW()\n\n\");\n</code></pre> <p>Pengaturan file .env</p> <p>Pengaturan toko untuk invoice</p> Keyword Deskripsi LABAYAR_STORE_NAME Nama toko LABAYAR_STORE_OWNER Nama pemilik toko LABAYAR_STORE_ADDRESS Alamat toko LABAYAR_STORE_PHONE Telepon toko LABAYAR_STORE_EMAIL Email toko <p>Pengaturan payment gateway tripay (optional)</p> <p>Dapatkan info lengkap mengenai payment gateway tripay di sini</p> Keyword Deskripsi TRIPAY_IS_PRODUCTION Environtment tripay sandbox / production TRIPAY_MERCHANT_CODE Kode merchant tripay TRIPAY_API_KEY API key tripay TRIPAY_PRIVATE_KEY Private key tripay TRIPAY_RETURN_URL Redirect URL ketika berhasil melakukan checkout pembayaran <p>Lakukan migrasi pada database melalui terminal atau cmd</p> <pre><code>php artisan migrate\n</code></pre> <p>Jalankan default seeder untuk labayar</p> <pre><code>php artisan db:seed --class=LabayarSeeder\n</code></pre> <p>Jalankan project laravel</p> <pre><code>php artisan serve\n</code></pre>"},{"location":"about/","title":"Labayar","text":"<p>Project laravel open source yang digunakan untuk membangun sistem yang membutuhkan invoice, seperti:</p> <ul> <li>Toko Online</li> <li>Customer Relationship Management</li> <li>Point Of Sales   Labayar ini berbasis plugin dan hanya bisa digunakan di project laravel. karena berbasis plugin, labayar bisa digunakan di project kamu yang sudah ada atau project baru berbasis laravel</li> </ul>"},{"location":"about/#kontributor","title":"Kontributor","text":"<ul> <li>Mas raga</li> </ul>"},{"location":"api-ref/","title":"Referensi API Labayar","text":""},{"location":"api-ref/#pembayaran","title":"Pembayaran","text":"<p>Pembayaran invoice manual</p> <pre><code>&lt;?php\nuse Koderpedia\\Labayar\\Payment;\n$paymentId = \"inv-00001-12334\";\n$amount = 40000;\nPayment::pay([\"paymentId\" =&gt; $paymentId, \"amount\" =&gt; $amount])\n?&gt;\n</code></pre> Payload Deskripsi Tipe data paymentId ID pembayaran dari table labayar_invoice_payments string amount Jumlah yang dibayarkan integer <p>API List order pembayaran</p> <pre><code>&lt;?php\nuse Koderpedia\\Labayar\\Payment;\n$filter = [\n  \"invoiceId\" =&gt; \"inv-0001\",\n  \"keyword\" =&gt; \"inv-0001\",\n  \"createdAtRange\" =&gt; [\n    \"dateStart\" =&gt; new Date\n    \"dateEnd\" =&gt; new Date\n  ],\n  \"oneRow\" =&gt; true\n];\nPayment::APIListOrder()\n?&gt;\n</code></pre> Payload Deskripsi Tipe data invoiceId ID invoice dari labayar_invoices string keyword Pencarian data berdasarkan keyword id invoice string createdAtRange Filter tanggal invoice dibuat array oneRow Hanya menampilkan satu data boolean"},{"location":"payment/","title":"Pembayaran","text":"<p>Labayar mendukung beberapa pembayaran, diantaranya:</p> <ul> <li>Pembayaran tunai di kasir</li> <li>Pembayaran menggunakan tripay payment gateway</li> </ul>"},{"location":"payment/#pengaturan","title":"Pengaturan","text":"<p>Tambahkan satu controller PaymentContorller</p> <pre><code>php artisan make:controller PaymentController\n</code></pre> <p>Lalu tambahkan satu fungsi yang nantinya akan kita gunakan sebagai action untuk membuat invoice</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function createInvoice(Request $request)\n    {\n        // disini nantinya kita akan menambahkan logika untuk membuat invoice\n    }\n}\n</code></pre> <p>Tambahkan satu view dengan nama chasier.blade.php untuk kebutuhan generate invoice. halaman ini hanya contoh, kamu dapat mengembangkan sesuka kamu. Halaman ini hanya akan menyajikan field wajib yang harus berikan ketika ingin generate invoice.</p> <p>Tampilkan views tersebut ke browser</p> routes/web.php<pre><code>Route::get('/', function () {\n  return view('chasier');\n});\n</code></pre> <p>didalam view chasier.blade.php kamu bisa menambahkan potongan kode dibawah ini</p> resources/views/chasier.blade.php<pre><code>&lt;form action=\"/invoice/generate\" method=\"post\"&gt;\n  @csrf\n  &lt;fieldset&gt;\n    &lt;legend&gt;Customer&lt;/legend&gt;\n    &lt;label for=\"\"&gt;Nama customer&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" name=\"customerName\" value=\"Raga mulia kusuma\"&gt;&lt;br&gt;\n    &lt;label for=\"\"&gt;Telepon customer&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" name=\"customerPhone\" value=\"081234567890\"&gt;&lt;br&gt;\n    &lt;label for=\"\"&gt;Email customer&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" name=\"customerEmail\" value=\"real.ragamulia@gmail.com\"&gt;&lt;br&gt;\n  &lt;/fieldset&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Pesanan&lt;/legend&gt;\n    &lt;label for=\"\"&gt;ID produk&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" name=\"productId[]\" value=\"product123\" readonly&gt;&lt;br&gt;\n    &lt;label for=\"\"&gt;Nama produk&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" name=\"productName[]\" value=\"Jeruk bali asli\" readonly&gt;&lt;br&gt;\n    &lt;label for=\"\"&gt;Jumlah beli&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"number\" name=\"productQty[]\" value=\"2\" readonly&gt;&lt;br&gt;\n    &lt;label for=\"\"&gt;Harga satuan&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"number\" name=\"productPrice[]\" value=\"10000\" readonly&gt;&lt;br&gt;\n  &lt;/fieldset&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Jumlah bayar&lt;/legend&gt;\n    &lt;div&gt;* jumlah bayar hanya bisa digunakan untuk jenis pembayaran langsung (cash)&lt;/div&gt;\n    &lt;input type=\"number\" name=\"payAmount\" value=\"30000\" readonly&gt;\n  &lt;/fieldset&gt;\n  &lt;button type=\"submit\"&gt;Bayar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Perhatikan pada tag form, disana ada attribute method dan action. Pada bagian method, kamu bisa isi dengan POST dan action /invoice/generate. Lalu kamu bisa kembali ke web router, dan menambahkan potongan kode ini</p> routes/web.php<pre><code>use App\\Http\\Controllers\\PaymentController;\nRoute::post(\"/invoice/generate\", [PaymentController::class, \"createInvoice\"]);\n</code></pre> <p>Kembali ke controller PaymentController dan pada method createInvoice kamu bisa tambahan logika untuk memproses seluruh inputan dari chasier.blade.php</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function createInvoice(Request $request)\n    {\n        /**\n         * ID unik untuk setiap data invoice, kamu bisa mengkreasikan dengan ID mu sendiri\n        */\n        $orderId = \"inv-0001\";\n        $customer = [\n          \"name\" =&gt; $request-&gt;customerName,\n          \"phone\" =&gt; $request-&gt;customerPhone,\n          \"email\" =&gt; $request-&gt;customerEmail,\n        ];\n        $amount = $request-&gt;payAmount;\n        $items = [];\n        for ($i = 0; $i &lt; count($request-&gt;productId); $i++) {\n          $items[] = [\n            \"productId\" =&gt; $request-&gt;productId[$i],\n            \"price\" =&gt; $request-&gt;productPrice[$i],\n            \"quantity\" =&gt; $request-&gt;productQty[$i],\n            \"name\" =&gt; $request-&gt;productName[$i],\n          ];\n        }\n        /**\n         * Digunakan untuk mengatur batas jatuh tempo pembayaran. Untuk key unit kamu bisa memasukkan * minutes/hours/days\n        */\n        $expiry = [\n          \"unit\" =&gt; \"minutes\",\n          \"duration\" =&gt; 60\n        ];\n\n        $payload = [\n          \"orderId\" =&gt; $orderId,\n          \"customer\" =&gt; $customer,\n          \"items\" =&gt; $items,\n          \"expiry\" =&gt; $expiry,\n          \"payAmount\" =&gt; $amount\n        ];\n\n        //Inisiasi logika pembayaran disini\n    }\n}\n</code></pre> <p>Warning</p> <p>Perhatikan variable $payload, untuk pembayaran dengan payment gateway kamu tidak perlu mengirimkan data payAmount</p> <p>Tip</p> <p>Pada dasarnya untuk setiap data yang dikirim untuk generate invoice adalah sama, jadi kamu bisa menggunakan $payload yang sama untuk generate invoice manual / payment gateway</p>"},{"location":"payment/#invoice-manual-cash","title":"Invoice manual (cash)","text":"<p>Buka controller PaymentController dan tambahkan potongan kode dibawah ini:</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function createInvoice(Request $request)\n    {\n        ...\n        //Inisiasi logika pembayaran disini\n        $payment = new Payment();\n        $payment-&gt;createInvoice($payload);\n        // redirect\n    }\n}\n</code></pre>"},{"location":"payment/#invoice-payment-gateway","title":"Invoice payment gateway","text":"<p>Untuk pembayaran payment gateway ini, kamu hanya perlu menbamhahkan satu parameter pada instance Payment.</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function createInvoice(Request $request)\n    {\n        ...\n        //Inisiasi logika pembayaran disini\n        $payment = new Payment(\"tripay\");\n        $payment-&gt;createInvoice($payload);\n        // redirect\n    }\n}\n</code></pre> <p>Tip</p> <p>Kamu bisa menambahkan payment gateway tripay hanya dengan menambahkan satu parameter tripay. Ini berlaku untuk payment gateway lainnya, hanya saja untuk saat ini, labayar hanya mendukung payment gateway tripay.</p> <p>Sejauh ini kamu sudah berhasil melakukan generate invoice di sistem. Kamu bisa check di database pada table labayar_invoices, maka akan terdefinisi satu record baru.</p> <p>Tip</p> <p>Jika kamu tidak ingin membuat halaman order sendiri, kamu bisa menggunakan halaman order bawaan dari labayar, dengan melakukan redirect ke api labayar</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function createInvoice(Request $request)\n    {\n        ...\n        // redirect\n        return redirect(\"/api/labayar/orders\");\n    }\n}\n</code></pre>"},{"location":"payment/#pembayaran-invoice-manual","title":"Pembayaran invoice (manual)","text":"<p>Kamu bisa melunasi pembayaran dengan metode tunai / payment gateway dengan hanya satu fungsi. Pada controller PaymentController kamu bisa menambahkan</p> app/Http/Controllers/PaymentController.php<pre><code>use Koderpedia\\Labayar\\Payment;\nclass PaymentController extends Controller\n{\n    public function payInvoice(Request $request)\n    {\n        $paymentId = \"inv-00001-123234\"; // kamu bisa mendapatkan data ini dari table mysql labayar_invoice_payments field orderId\n        $amount = 40000; // jumlah ini harus &gt;= nett total invoice\n        return Payment::pay(compact(\"paymentId\", \"amount\"))\n    }\n}\n</code></pre> <p>Warning</p> <p>Untuk payment gateway fungsi pembayaran invoice ini tidak wajib, karena invoice akan otomatis lunas, ketika invoice dibayar menggunakan metode bayar dari payment gateway</p>"}]}